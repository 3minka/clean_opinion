import pandas as pd

path = '/home/user/hs/Opinosis/OpinosisDataset1.0_0/topics/'

# 현재 디렉토리 파일 리스트 가져오기
file_list = os.listdir(path)

# 파일 리스트 중에 .data로 시작하는 파일 가져오기
file_list_py = [file for file in file_list if file.endswith('.data')]


def concat(data, pd_max_colums):
    data_ls = []
    for _ in range(pd_max_colums):
        a_data = data[_]
        data_ls.append(a_data) 
    data = pd.concat(data_ls, ignore_index=True)
    
    return data
    
    
df = pd.DataFrame()

for i in file_list_py:
    #############################################
    # uni_8 코드 에러 제거 ## 11개
    if i == 'battery-life_amazon_kindle.txt.data':
        continue
    if i == 'buttons_amazon_kindle.txt.data':
        continue
    if i == 'food_holiday_inn_london.txt.data':
        continue
    if i == 'food_swissotel_chicago.txt.data':
        continue
    if i == 'location_holiday_inn_london.txt.data':
        continue
    if i == 'parking_bestwestern_hotel_sfo.txt.data':
        continue   
    if i == 'price_holiday_inn_london.txt.data':
        continue
    if i == 'rooms_bestwestern_hotel_sfo.txt.data':
        continue    
    if i == 'room_holiday_inn_london.txt.data':
        continue     
    if i == 'service_holiday_inn_london.txt.data':
        continue
    if i == 'staff_bestwestern_hotel_sfo.txt.data':
        continue
    #############################################
    
    data = pd.read_csv(path + i, sep = "\t", engine='python', encoding='cp949')
    data.columns = [i]
    df = pd.concat([df,data], axis = 0)
    
dfs = df.reset_index(drop = True)






df = pd.DataFrame()
data_ls = []
name_list = []

for i in file_list_py:
    #############################################    
    # uni_8 코드 에러 제거 ## 11개
    if i == 'battery-life_amazon_kindle.txt.data':
        continue
    if i == 'buttons_amazon_kindle.txt.data':
        continue
    if i == 'food_holiday_inn_london.txt.data':
        continue
    if i == 'food_swissotel_chicago.txt.data':
        continue
    if i == 'location_holiday_inn_london.txt.data':
        continue
    if i == 'parking_bestwestern_hotel_sfo.txt.data':
        continue   
    if i == 'price_holiday_inn_london.txt.data':
        continue
    if i == 'rooms_bestwestern_hotel_sfo.txt.data':
        continue    
    if i == 'room_holiday_inn_london.txt.data':
        continue     
    if i == 'service_holiday_inn_london.txt.data':
        continue
    if i == 'staff_bestwestern_hotel_sfo.txt.data':
        continue
    #############################################
    
    for j in range(length):
        name_list.append(i)
    
    df_data = pd.DataFrame(dfs[i])
    df_data.index = name_list

    # 시리즈 데이터 변환
    series_data = df_data[i]
    # 리스트 insert
    data_ls.append(series_data)
    
    # 인덱스 초기화 
    name_list = []
   
# 리스트 concat
data_pd_concat = pd.concat(data_ls) #ignore_index=True 
result = data_pd_concat.dropna(how='any',axis=0)
result_idx = result.rename_axis('index').reset_index()


# 리셋 인덱스(행이름바꾸기)
# result_idx = result.set_index(drop=True)
# 전처리 데이터 저장
# result_idx.to_csv("/home/user/hs/Opinosis/OpinosisDataset1.0_0/clean_opinion.txt", header=False, index=False, mode="w", encoding='utf-8-sig')

def cleaning(data):
    
    data = re.sub(r'[0-9]+', '', data)
    # 숫자 제거하기
    data = re.sub(r'[^\w\s]','',data)
    # 구두점 제거
    data = re.sub(r'([.,?!:])(\w)', '\g<1> \g<2>', data)
    # 구두점 다음에 글자가 있는 경우 공백 추가 => .단어 => . 단어
    data = re.sub(r'\s{2,}', '\n', data).strip()
    # 공백 2개 이상인 경우 한개만 => \n\n\n\n\n.      => \n
    data = re.sub(r'[^\s\w\d.,?!:\'\"]', '', data)
    # 공백, 문자, 숫자, 구두점을 제외한 나머지 글자 삭제 => 특수문자 제거
    
#     data = '\n'.join(data.splitlines()[1:])
    return data
    
